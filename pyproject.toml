[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pytask_julia"
description = "A Pytask plugin for Julia"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only"
]
requires-python = ">=3.8"
dependencies = [
    "pluggy>=1.0.0",
    "pytask>=0.4.5"
]
dynamic = ["version"]

[[project.authors]]
name = "Tobias Raabe"
email = "raabe@posteo.de"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/pytask-dev/pytask-julia"
Changelog = "https://github.com/pytask-dev/pytask-julia/blob/main/CHANGES.md"
Documentation = "https://github.com/pytask-dev/pytask-julia"
Github = "https://github.com/pytask-dev/pytask-julia"
Tracker = "https://github.com/pytask-dev/pytask-julia/issues"

[tool.setuptools]
include-package-data = true
zip-safe = false
platforms = ["any"]
license-files = ["LICENSE"]

[tool.check-manifest]
ignore = ["src/pytask_julia/_version.py"]

[project.entry-points.pytask]
pytask_julia = "pytask_julia.plugin"

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools_scm]
write_to = "src/pytask_julia/_version.py"

[tool.mypy]
files = ["src", "tests"]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
ignore_errors = true

[tool.ruff]
target-version = "py38"
fix = true
unsafe-fixes = true

[tool.ruff.lint]
extend-ignore = [
    "ANN401",  # flake8-annotate typing.Any
    "COM812",  # Comply with ruff-format.
    "ISC001",  # Comply with ruff-format.
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "ANN", "S101"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
# Do not add src since it messes with the loading of pytask-parallel as a plugin.
testpaths = ["tests"]
markers = [
    "wip: Tests that are work-in-progress.",
    "unit: Flag for unit tests which target mainly a single function.",
    "integration: Flag for integration tests which may comprise of multiple unit tests.",
    "end_to_end: Flag for tests that cover the whole program.",
]
norecursedirs = [".idea", ".tox"]
